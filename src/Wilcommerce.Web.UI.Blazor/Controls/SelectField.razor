@typeparam TItem
@typeparam TValue

<div class="form-group">
    <label for="@FieldId">@Label</label>
    <InputSelect Value="@Value"
                 ValueChanged="@ValueChanged"
                 ValueExpression="@ValueExpression"
                 id="@FieldId"
                 class="@CssClass"
                 disabled="@Disabled">
        @if (!string.IsNullOrWhiteSpace(EmptyText))
        {
            <option>@EmptyText</option>
        }
        @foreach (var item in Items)
        {
            <option value="@OptionValue.Compile().Invoke(item)">@DisplayValue.Compile().Invoke(item)</option>
        }
    </InputSelect>
    <ValidationMessage For="@ValueExpression" />
</div>

@code {
    [Parameter]
    public string Label { get; set; }

    [Parameter]
    public string FieldId { get; set; }

    [Parameter]
    public TValue Value { get; set; }

    [Parameter]
    public string CssClass { get; set; }

    [Parameter]
    public bool Disabled { get; set; } = false;

    [Parameter]
    public EventCallback<TValue> ValueChanged { get; set; }

    [Parameter]
    public Expression<Func<TValue>> ValueExpression { get; set; }

    [Parameter]
    public Expression<Func<TItem, string>> DisplayValue { get; set; }

    [Parameter]
    public Expression<Func<TItem, TValue>> OptionValue { get; set; }

    [Parameter]
    public IEnumerable<TItem> Items { get; set; }

    [Parameter]
    public string EmptyText { get; set; }
}
